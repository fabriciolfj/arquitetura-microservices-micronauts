plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.4.5"
}

version = "0.1"
group = "com.github.fabriciolfj"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.github.fabriciolfj.*")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    implementation("io.micronaut.flyway:micronaut-flyway")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.spring:micronaut-spring-annotation")
    annotationProcessor("io.micronaut.spring:micronaut-spring-web-annotation")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.4.2.Final")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-spring")
    implementation("io.micronaut.data:micronaut-data-spring-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.springframework:spring-orm")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("mysql:mysql-connector-java")
    testAnnotationProcessor("io.micronaut.spring:micronaut-spring-annotation")
    testAnnotationProcessor("io.micronaut.spring:micronaut-spring-web-annotation")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("io.micronaut:micronaut-http-server")
    implementation("org.mapstruct:mapstruct-processor:1.4.2.Final")
    runtime("io.micronaut.spring:micronaut-spring-web")
    runtimeOnly("ch.qos.logback:logback-classic")

    compile 'org.mapstruct:mapstruct:1.4.2.Final'
}


application {
    mainClass.set("com.github.fabriciolfj.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amicronaut.processing.incremental=true',
            '-Amicronaut.processing.annotations=com.github.fabriciolfj.api.mapper.*',
    ]
}

